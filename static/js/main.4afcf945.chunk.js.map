{"version":3,"sources":["imgs/gold_logo.png","components/Heading.js","components/Scoreboard.js","cardsData.js","imgs/luffy.png","imgs/ace.png","imgs/blackbeard.png","imgs/boa_hancock.png","imgs/brook.png","imgs/buggy.png","imgs/chopper.png","imgs/franky.png","imgs/marco.png","imgs/nami.png","imgs/nico_robin.png","imgs/sanji.png","imgs/shanks.png","imgs/usopp.png","imgs/whitebeard.png","imgs/zoro.png","components/Card.js","components/Game.js","App.js","index.js"],"names":["Heading","className","src","logo","alt","Scoreboard","props","text","currentScore","bestScore","resultsText","cardsData","id","name","pic","luffy","ace","blackbeard","boaHancock","brook","buggy","chopper","franky","marco","nami","robin","sanji","shanks","usopp","whitebeard","zoro","Card","select","onClick","Game","selectedCards","clickCard","useState","deck","setDeck","generateRandomOrder","randomNum","orderArr","i","Math","floor","random","includes","push","every","index","shuffleDeck","order","newDeck","useEffect","map","card","Object","values","App","setCurrentScore","setBestScore","setResultsText","addCard","resetGame","e","target","closest","parseInt","isNew","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4afcf945.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gold_logo.365c5546.png\";","import React from 'react';\nimport logo from '../imgs/gold_logo.png';\n\nconst Heading = () => (\n  <div className=\"top-container\">\n    <img className=\"logo\" src={logo} alt=\"One Piece logo\" />\n    <h1 className=\"title-text\">Memory Card Game</h1>\n    <p className=\"directions\">\n      Gain points for picking cards, but do not pick any card twice\n    </p>\n  </div>\n);\n\nexport default Heading;\n","import React from 'react';\n\nconst Scoreboard = (props) => {\n  const { currentScore, bestScore, resultsText } = props;\n\n  let text;\n\n  if (resultsText === '') {\n    text = null;\n  } else {\n    text = <p className=\"feedback\">{resultsText}</p>;\n  }\n\n  return (\n    <div className=\"scoreboard\">\n      <div className=\"score-line\">\n        <p className=\"score-text\">Current Score:</p>\n        <p className=\"score-text score\">{currentScore}</p>\n      </div>\n      <div className=\"score-line\">\n        <p className=\"score-text\">Best Score:</p>\n        <p className=\"score-text score\">{bestScore}</p>\n      </div>\n      <div className=\"score-line\">\n        <p className=\"score-text\">Max Score:</p>\n        <p className=\"score-text score\">16</p>\n      </div>\n      {text}\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import luffy from './imgs/luffy.png';\nimport ace from './imgs/ace.png';\nimport blackbeard from './imgs/blackbeard.png';\nimport boaHancock from './imgs/boa_hancock.png';\nimport brook from './imgs/brook.png';\nimport buggy from './imgs/buggy.png';\nimport chopper from './imgs/chopper.png';\nimport franky from './imgs/franky.png';\nimport marco from './imgs/marco.png';\nimport nami from './imgs/nami.png';\nimport robin from './imgs/nico_robin.png';\nimport sanji from './imgs/sanji.png';\nimport shanks from './imgs/shanks.png';\nimport usopp from './imgs/usopp.png';\nimport whitebeard from './imgs/whitebeard.png';\nimport zoro from './imgs/zoro.png';\n\nconst cardsData = [\n  { id: 0, name: 'Monkey D. Luffy', pic: { luffy } },\n  { id: 1, name: 'Portgas D. Ace', pic: { ace } },\n  { id: 2, name: 'Marshall D. Teach', pic: { blackbeard } },\n  { id: 3, name: 'Boa Hancock', pic: { boaHancock } },\n  { id: 4, name: 'Brook', pic: { brook } },\n  { id: 5, name: 'Buggy the Star Clown', pic: { buggy } },\n  { id: 6, name: 'Tony Tony Chopper', pic: { chopper } },\n  { id: 7, name: 'Franky', pic: { franky } },\n  { id: 8, name: 'Marco the Phoenix', pic: { marco } },\n  { id: 9, name: 'Nami', pic: { nami } },\n  { id: 10, name: 'Nico Robin', pic: { robin } },\n  { id: 11, name: 'Sanji', pic: { sanji } },\n  { id: 12, name: 'Shanks', pic: { shanks } },\n  { id: 13, name: 'Usopp', pic: { usopp } },\n  { id: 14, name: 'Edward Newgate', pic: { whitebeard } },\n  { id: 15, name: 'Roronoa Zoro', pic: { zoro } },\n];\n\nexport default cardsData;\n","export default __webpack_public_path__ + \"static/media/luffy.b6cbbfff.png\";","export default __webpack_public_path__ + \"static/media/ace.d18401da.png\";","export default __webpack_public_path__ + \"static/media/blackbeard.2e5e7d37.png\";","export default __webpack_public_path__ + \"static/media/boa_hancock.b76a3430.png\";","export default __webpack_public_path__ + \"static/media/brook.55edd7f0.png\";","export default __webpack_public_path__ + \"static/media/buggy.0c404810.png\";","export default __webpack_public_path__ + \"static/media/chopper.bdb6e36c.png\";","export default __webpack_public_path__ + \"static/media/franky.a888862d.png\";","export default __webpack_public_path__ + \"static/media/marco.98c7abd7.png\";","export default __webpack_public_path__ + \"static/media/nami.70fce79c.png\";","export default __webpack_public_path__ + \"static/media/nico_robin.46a78ef3.png\";","export default __webpack_public_path__ + \"static/media/sanji.a8292cd1.png\";","export default __webpack_public_path__ + \"static/media/shanks.2152b763.png\";","export default __webpack_public_path__ + \"static/media/usopp.74a0ed36.png\";","export default __webpack_public_path__ + \"static/media/whitebeard.ef493d12.png\";","export default __webpack_public_path__ + \"static/media/zoro.7016473c.png\";","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\n\nconst Card = (props) => {\n  const { id, name, pic, select } = props;\n  return (\n    <div className=\"card\" id={id} onClick={select}>\n      <img src={pic} alt={name} className=\"card-pic\" />\n      <p className=\"char-name-text\">{name}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","/* eslint-disable array-callback-return */\n/* eslint-disable no-plusplus */\nimport React, { useState, useEffect } from 'react';\nimport cardsData from '../cardsData';\nimport Card from './Card';\n\nconst Game = (props) => {\n  const { selectedCards, clickCard, currentScore, bestScore } = props;\n\n  const [deck, setDeck] = useState([]);\n\n  const generateRandomOrder = () => {\n    let orderArr = [];\n    let randomNum;\n    for (let i = 0; i < 3; i++) {\n      randomNum = Math.floor(Math.random() * 16);\n      if (!orderArr.includes(randomNum)) {\n        orderArr.push(randomNum);\n      } else {\n        orderArr = generateRandomOrder();\n      }\n    }\n    if (orderArr.every((index) => selectedCards.includes(index))) {\n      orderArr = generateRandomOrder();\n    }\n    return orderArr;\n  };\n\n  const shuffleDeck = () => {\n    const order = generateRandomOrder();\n    const newDeck = [\n      cardsData[order[0]],\n      cardsData[order[1]],\n      cardsData[order[2]],\n    ];\n    setDeck(newDeck);\n  };\n\n  useEffect(() => {\n    shuffleDeck();\n  }, []);\n\n  useEffect(() => {\n    if (currentScore < 16) {\n      shuffleDeck();\n    }\n  }, [currentScore, bestScore]);\n\n  return (\n    <div className=\"cards-container\">\n      {deck.map((card) => (\n        <Card\n          id={card.id}\n          name={card.name}\n          pic={Object.values(card.pic)}\n          select={clickCard}\n          key={card.id}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Game;\n","/* eslint-disable prefer-destructuring */\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\nimport Heading from './components/Heading';\nimport Scoreboard from './components/Scoreboard';\nimport Game from './components/Game';\n\nfunction App() {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [resultsText, setResultsText] = useState('');\n  const [selectedCards, addCard] = useState([]);\n\n  const isNew = (id) => {\n    if (selectedCards.includes(id)) {\n      return false;\n    }\n    return true;\n  };\n\n  const checkIfBest = () => {\n    if (currentScore > bestScore) {\n      setBestScore(currentScore);\n    }\n  };\n\n  const resetGame = () => {\n    checkIfBest();\n    setCurrentScore(0);\n    addCard([]);\n  };\n\n  const clickCard = (e) => {\n    const card = e.target.closest('.card');\n    if (card) {\n      const id = parseInt(card.id, 10);\n      const newCard = isNew(id);\n      if (newCard) {\n        addCard(selectedCards.concat(id));\n        setCurrentScore(currentScore + 1);\n        setResultsText('');\n      } else {\n        resetGame();\n        setResultsText('Sorry, you already picked that card');\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (currentScore === 16) {\n      resetGame();\n      setResultsText('Congratulations, you won!');\n    }\n  }, [currentScore]);\n\n  return (\n    <div className=\"App\">\n      <Heading />\n      <Scoreboard\n        currentScore={currentScore}\n        bestScore={bestScore}\n        resultsText={resultsText}\n      />\n      <Game\n        selectedCards={selectedCards}\n        clickCard={clickCard}\n        currentScore={currentScore}\n        bestScore={bestScore}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}